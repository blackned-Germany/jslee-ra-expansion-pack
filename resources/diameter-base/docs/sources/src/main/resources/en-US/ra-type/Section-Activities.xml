<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_activities">

	<title>Activities</title>

	<para>&THIS.RA; Type &THIS.VERSION;	defines the following Activities:</para>
	
	<variablelist>
		<varlistentry>
			<term>net.java.slee.resource.diameter.base.AuthClientSessionActivity</term>
			<listitem>
				<para>This type of activity represents client side of Base Authentication session. Abort-Session-Request (ASR) and Re-Auth-Request (RAR) messages are received in this Activity and respective Answers are sent from it. Session-Termination-Request (STR) can be created and sent in this Activity, receiving the respective Answer (or timeout) later on this Activity.</para>
				<para>This activity type can be created with call to the appropriate <methodname>createAuthenticationClientSessionActivity</methodname> method of <classname>net.java.slee.resource.diameter.base.DiameterProvider</classname>. It ends once underlying Base Authentication session ends.</para>
				<para>State machine for client Base Authorization sessions can be found at <ulink url="http://tools.ietf.org/html/rfc3588#section-8.1">Section 8.1</ulink> of Diameter Base Protocol RFC.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>net.java.slee.resource.diameter.base.AuthServerSessionActivity</term>
			<listitem>
				<para>This type of activity represents server side of Base Authentication session. Session-Termination-Request (STR) messages are received in this Activity and respective Answers are sent from it. Abort-Session-Request (ASR) and Re-Auth-Request (RAR) can be created and sent in this Activity, receiving the respective Answer (or timeout) later on this Activity.</para>
				<para>This activity type can be created with call to the appropriate <methodname>createAuthenticationServerSessionActivity</methodname> method of <classname>net.java.slee.resource.diameter.base.DiameterProvider</classname>. It ends once underlying Base Authentication session ends.</para>
				<para>State machine for client Base Authorization sessions can be found at <ulink url="http://tools.ietf.org/html/rfc3588#section-8.1">Section 8.1</ulink> of Diameter Base Protocol RFC.</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>net.java.slee.resource.diameter.base.AccountingClientSessionActivity</term>
			<listitem>
				<para>This type of activity represents client side of Base Accounting session. Accounting-Request (ACR) messages can be created and sent in this Activity, receiving the respective Answer (or timeout) later on this Activity.</para>
				<para>This activity type can be created with call to the appropriate <methodname>createAccountingClientSessionActivity</methodname> method of <classname>net.java.slee.resource.diameter.base.DiameterProvider</classname>. It ends once underlying Base Accounting session ends.</para>
				<para>State machine for client Base Accounting sessions can be found at <ulink url="http://tools.ietf.org/html/rfc3588#section-8.2">Section 8.2</ulink> of Diameter Base Protocol RFC.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>net.java.slee.resource.diameter.base.AccountingServerSessionActivity</term>
			<listitem>
				<para>This type of activity represents server side of Base Accounting session. Accounting-Request (ACR) messages are received in this Activity and respective Answers are sent from it.</para>
				<para>This activity type is created explicitly for incoming requests by Resource Adaptor. It ends once underlying Base Accounting session ends, either by timeout or proper answer delivery.</para>
				<para>State machine for server Base Accounting can be found at <ulink url="http://tools.ietf.org/html/rfc3588#section-8.2">Section 8.2</ulink> of Diameter Base Protocol RFC.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>net.java.slee.resource.diameter.base.DiameterActvity</term>
			<listitem>
				<para>This type of activity represents a generic Diameter session and it's the super type for all other Diameter Activities. It can be used as an extension point for Diameter Applications.</para>
				<para>This activity type is created explicitly for unknown (not defined in other Activities) incoming requests by Resource Adaptor or by calling the appropriate <methodname>createActivity</methodname> method of <classname>net.java.slee.resource.diameter.base.DiameterProvider</classname>. It ends once underlying session ends, either by timeout or proper answer delivery.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Generic Diameter Activity Interface -->
	
	<para>
		All activities define methods required to properly function and	expose necessary information to	<acronym>JAIN SLEE</acronym> services.
		Common part for all Diameter Activities is defined as follows:
	</para>
	
	<programlisting role="JAVA" language="Java">
	DiameterMessageFactory getDiameterMessageFactory();

	DiameterAvpFactory getDiameterAvpFactory();

	void sendMessage(DiameterMessage message) throws IOException;

	String getSessionId();

	void endActivity();
	</programlisting>

	<variablelist>
		<varlistentry>
			<term>DiameterMessageFactory getDiameterMessageFactory();</term>
			<listitem>
				<para>Returns message factory capable of creating Diameter Base or other (extension) messages.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>DiameterAvpFactory getDiameterAvpFactory();</term>
			<listitem>
				<para>Returns <acronym>AVP</acronym> factory capable of creating Diameter Base or other (extension) <acronym>AVP</acronym>s.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendMessage(DiameterMessage message) throws IOException;</term>
			<listitem>
				<para>Provides means to send generic Diameter messages.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>String getSessionId();</term>
			<listitem>
				<para>Returns Session ID of underlying Diameter session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void endActivity();</term>
			<listitem>
				<para>Terminates underlying session.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Diameter Common Authentication Activity Interface -->

	<para>Common part for Authentication Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AuthSessionState getSessionState();
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AuthSessionState getSessionState();</term>
			<listitem>
				<para>Return current Auth session state. It can have values as follows:</para>
				<itemizedlist>
					<listitem>
						<para>IDLE</para>
					</listitem>
					<listitem>
						<para>PENDING</para>
					</listitem>
					<listitem>
						<para>OPEN</para>
					</listitem>
					<listitem>
						<para>DISCONNECTED</para>
					</listitem>
				</itemizedlist>
				<para>DISCONNECTED value implies that activity is ending.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Diameter Client Authentication Activity Interface -->

	<para>Client part for Authentication Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AbortSessionAnswer createAbortSessionAnswer();

	AbortSessionAnswer createAbortSessionAnswer(AbortSessionRequest abortSessionRequest);

	void sendAbortSessionAnswer(AbortSessionAnswer abortSessionAnswer)
		throws IOException, IllegalArgumentException;

	ReAuthAnswer createReAuthAnswer();

	ReAuthAnswer createReAuthAnswer(ReAuthRequest reAuthRequest);

	void sendReAuthAnswer(ReAuthAnswer reAuthAnswer)
		throws IOException, IllegalArgumentException;

	SessionTerminationRequest createSessionTerminationRequest(
		TerminationCauseType terminationCause);

	void sendSessionTerminationRequest(
		SessionTerminationRequest sessionTerminationRequest)
			throws IOException, IllegalArgumentException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AbortSessionAnswer createAbortSessionAnswer();</term>
			<listitem>
				<para>Create an empty Abort-Session-Answer with the Auth-Application-Id set to 0.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>AbortSessionAnswer createAbortSessionAnswer(AbortSessionRequest abortSessionRequest);</term>
			<listitem>
				<para>Create an Abort-Session-Answer with some AVPs populated from the provided Abort-Session-Request.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendAbortSessionAnswer(AbortSessionAnswer abortSessionAnswer) throws IOException, IllegalArgumentException;</term>
			<listitem>
				<para>Send an Abort-Session-Answer.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>ReAuthAnswer createReAuthAnswer();</term>
			<listitem>
				<para>Create an empty Re-Auth-Answer with the Auth-Application-Id set to 0.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>ReAuthAnswer createReAuthAnswer(ReAuthRequest reAuthRequest);</term>
			<listitem>
				<para>Create an Re-Auth-Answer with some AVPs populated from the provided Re-Auth-Request.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendReAuthAnswer(ReAuthAnswer reAuthAnswer) throws IOException, IllegalArgumentException;</term>
			<listitem>
				<para>Send an Re-Auth-Answer.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>SessionTerminationRequest createSessionTerminationRequest(TerminationCauseType terminationCause);</term>
			<listitem>
				<para>Create an Session-Termination-Request message populated with the following AVPs:
					<itemizedlist>
						<listitem>Termination-Cause: as per terminationCause parameter</listitem>
						<listitem>Auth-Application-Id: the value 0 as specified by RFC3588</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendSessionTerminationRequest(SessionTerminationRequest sessionTerminationRequest) throws IOException, IllegalArgumentException;</term>
			<listitem>
				<para>Send an Session Termination Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Diameter Server Authentication Activity Interface -->
	
	<para>Server part for Authentication Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AbortSessionRequest createAbortSessionRequest();

	void sendAbortSessionRequest(AbortSessionRequest request) throws IOException;

	ReAuthRequest createReAuthRequest(ReAuthRequestType reAuthRequestType);

	void sendReAuthRequest(ReAuthRequest request) throws IOException;

	SessionTerminationAnswer createSessionTerminationAnswer();

	SessionTerminationAnswer createSessionTerminationAnswer(
		SessionTerminationRequest sessionTerminationRequest);

	void sendSessionTerminationAnswer(SessionTerminationAnswer request)
		throws IOException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AbortSessionRequest createAbortSessionRequest();</term>
			<listitem>
				<para>Create an Abort-Session-Request message populated with the following AVPs:
					<itemizedlist>
						<listitem>Auth-Application-Id: the value 0 as specified by RFC3588</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendAbortSessionRequest(AbortSessionRequest request) throws IOException;</term>
			<listitem>
				<para>Send session abort session request to client</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>ReAuthRequest createReAuthRequest(ReAuthRequestType reAuthRequestType);</term>
			<listitem>
				<para>Create an Re-Auth-Request message populated with the following AVPs:
					<itemizedlist>
						<listitem>Auth-Application-Id: the value 0 as specified by RFC3588</listitem>
						<listitem>Re-Auth-Request-Type: as per reAuthRequestType parameter</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendReAuthRequest(ReAuthRequest request) throws IOException;</term>
			<listitem>
				<para>Send Re-Auth-Request.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>SessionTerminationAnswer createSessionTerminationAnswer();</term>
			<listitem>
				<para>Create an Session-Termination-Answer with the Auth-Application-Id set to 0.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>SessionTerminationAnswer createSessionTerminationAnswer(SessionTerminationRequest sessionTerminationRequest);</term>
			<listitem>
				<para>Create an Session-Termination-Answer with some AVPs populated from the provided Session-Termination-Request.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendSessionTerminationAnswer(SessionTerminationAnswer request) throws IOException;</term>
			<listitem>
				<para>Send session termination answer to client.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Diameter Common Accounting Activity Interface -->

	<para>Common part for Accounting Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AccountingSessionState getAccountingSessionState();
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AccountingSessionState getAccountingSessionState();</term>
			<listitem>
				<para>Returns current Accounting session state of underlying session. Valid values are:</para>
				<itemizedlist>
					<listitem>
						<para>Idle</para>
					</listitem>
					<listitem>
						<para>PendingS</para>
					</listitem>
					<listitem>
						<para>PendingE</para>
					</listitem>
					<listitem>
						<para>PendingB</para>
					</listitem>
					<listitem>
						<para>Open</para>
					</listitem>
					<listitem>
						<para>PendingI</para>
					</listitem>
					<listitem>
						<para>PendingL</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
	</variablelist>
	
	<!-- Diameter Client Accounting Activity Interface -->
	
	<para>Client part for Accounting Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AccountingRequest createAccountingRequest(AccountingRecordType accountingRecordType);
	
	void sendAccountRequest(AccountingRequest accountingRequest)
		throws IOException, IllegalArgumentException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AccountingRequest createAccountingRequest(AccountingRecordType accountingRecordType);</term>
			<listitem>
				<para>Create an Accounting-Request message populated with the following AVPs:
					<itemizedlist>
						<listitem>Accounting-Record-Type: as per accountingRecordType parameter</listitem>
						<listitem>Acct-Application-Id: the value 3 as specified by RFC3588</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendAccountRequest(AccountingRequest accountingRequest) throws IOException, IllegalArgumentException;</term>
			<listitem>
				<para>Send an Accounting Request. An event containing the answer or timeout will be fired on this activity.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<!-- Diameter Server Accounting Activity Interface -->

	<para>Server part for Accounting Activities is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	AccountingAnswer createAccountingAnswer();

	AccountingAnswer createAccountingAnswer(AccountingRequest acr);

	void sendAccountingAnswer(AccountingAnswer aca)
		throws IOException, IllegalArgumentException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>AccountingAnswer createAccountingAnswer();</term>
			<listitem>
				<para>Create an Accounting-Answer with the Acct-Application-Id set to 3.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>AccountingAnswer createAccountingAnswer(AccountingRequest acr);</term>
			<listitem>
				<para>Create an Accounting-Answer with some AVPs populated from the provided Accounting-Request. The ACA will contain the AVPs specified in createAccountingAnswer() and the following AVPs from the Accounting-Request:
					<itemizedlist>
						<listitem>Accounting-Record-Type</listitem>
						<listitem>Accounting-Record-Number</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendAccountingAnswer(AccountingAnswer aca) throws IOException, IllegalArgumentException;</term>
			<listitem>
				<para>Send an Accounting Answer.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<note><para>It is safe to type cast all the mentioned Diameter Activities to it's super interface <classname>net.java.slee.resource.diameter.base.DiameterActivity</classname> defined in this section.</para></note>
</section>