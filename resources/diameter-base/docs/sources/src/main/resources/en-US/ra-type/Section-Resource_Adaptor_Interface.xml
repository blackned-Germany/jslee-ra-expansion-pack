<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_ra_interface">

	<title>Resource Adaptor Interface</title>

	<para>The &THIS.PLATFORM; &THIS.RA; Resource Adaptor SBB Interface provides SBBs with access to the Diameter objects required for creating and sending messages. It is defined as follows: </para>

	<programlisting role="JAVA" langugage="Java">
package net.java.slee.resource.diameter.base;

import net.java.slee.resource.diameter.base.events.DiameterMessage;
import net.java.slee.resource.diameter.base.events.avp.DiameterIdentity;

import java.io.IOException;

public interface DiameterProvider {

	public DiameterMessageFactory 
		getDiameterMessageFactory();

	public DiameterAvpFactory getDiameterAvpFactory();

	public DiameterActivity createActivity() throws CreateActivityException;

	public DiameterActivity createActivity(DiameterIdentity destinationHost, 
		DiameterIdentity destinationRealm) throws CreateActivityException;

	public AccountingClientSessionActivity createAccountingClientSessionActivity()
		throws CreateActivityException;

	public AccountingClientSessionActivity createAccountingClientSessionActivity(
		DiameterIdentity destinationHost, DiameterIdentity destinationRealm)
			throws CreateActivityException ;

	public AuthClientSessionActivity createAuthenticationClientSessionActivity()
		throws CreateActivityException;

	public AuthClientSessionActivity createAuthenticationClientSessionActivity(
		DiameterIdentity destinationHost, DiameterIdentity destinationRealm) 
			throws CreateActivityException;

	public DiameterMessage sendSyncRequest(DiameterMessage message)
		throws IOException;

	public DiameterIdentity[] getConnectedPeers();

	public int getPeerCount();
}
	</programlisting>
	
	<para>
		<variablelist>
			<varlistentry>
				<term>public DiameterMessageFactory getDiameterMessageFactory();</term>
				<listitem><para>This method returns a <classname>DiameterMessageFactory</classname> implementation to be used to create <classname>DiameterMessage</classname> objects.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterAvpFactory getDiameterAvpFactory();</term>
				<listitem><para>This method returns a <classname>DiameterAvpFactory</classname> implementation to be used to create <classname>DiameterAvp</classname> objects.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterActivity createActivity() throws CreateActivityException;</term>
				<listitem><para>This method creates a new activity to send and receive Diameter messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterActivity createActivity(DiameterIdentity destinationHost, DiameterIdentity destinationRealm) throws CreateActivityException;</term>
				<listitem><para>This method creates a new activity to send and receive Diameter messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public AccountingClientSessionActivity createAccountingClientSessionActivity() throws CreateActivityException;</term>
				<listitem><para>This method create a new activity to send Diameter Accounting request messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public AccountingClientSessionActivity createAccountingClientSessionActivity(DiameterIdentity destinationHost, DiameterIdentity destinationRealm) throws CreateActivityException ;</term>
				<listitem><para>This method create a new activity to send Diameter Accounting request messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public AuthClientSessionActivity createAuthenticationClientSessionActivity() throws CreateActivityException;</term>
				<listitem><para>This method create a new activity to send Diameter Authorization request messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public AuthClientSessionActivity createAuthenticationClientSessionActivity(DiameterIdentity destinationHost, DiameterIdentity destinationRealm)throws CreateActivityException;</term>
				<listitem><para>This method create a new activity to send Diameter Authorization request messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterMessage sendSyncRequest(DiameterMessage message) throws IOException;</term>
				<listitem><para>Synchronously send a Diameter request and block until a response is received.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterIdentity[] getConnectedPeers();</term>
				<listitem><para>This method returns the identities of peers this Diameter resource adaptor is connected to.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public int getPeerCount();</term>
				<listitem><para>This method returns the number of peers this Diameter resource adaptor is connected to.</para></listitem>
			</varlistentry>
		</variablelist>
	</para>
</section>