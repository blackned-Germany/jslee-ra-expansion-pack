<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_activities">

	<title>Activities</title>

	<para>&THIS.RA; Type &THIS.VERSION;	defines the following Activities:</para>
	
	<variablelist>
		<varlistentry>
			<term>net.java.slee.resource.diameter.cxdx.CxDxClientSessionActivity</term>
			<listitem>
				<para>This type of activity represents client side of Cx/Dx session. User-Authorization-Request (UAR), Server-Assignment-Request (SAR), Location-Info-Request (LIR) and Multimedia-Authentication-Request (MAR) messages can be created and sent in this Activity, receiving the respective Answer (or timeout) later on this Activity. Registration-Termination-Request (RTR) and Push-Profile-Request (PPR) messages are received in this Activity and respective Answers are sent from it.</para>
				<para>This activity type is implicitly created when receiving Requests or can be created with call to the proper <methodname>createCxDxClientSessionActivity</methodname> method of <classname>net.java.slee.resource.diameter.cxdx.CxDxProvider</classname> for sending Requests. It ends once underlying Cx/Dx session ends.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>net.java.slee.resource.diameter.cxdx.CxDxServerSessionActivity</term>
			<listitem>
				<para>This type of activity represents server side of Cx/Dx session. Registration-Termination-Request (RTR) and Push-Profile-Request (PPR) messages can be created and sent in this Activity, receiving the respective Answer (or timeout) later on this Activity. User-Authorization-Request (UAR), Server-Assignment-Request (SAR), Location-Info-Request (LIR) and Multimedia-Authentication-Request (MAR) messages are received in this Activity and respective Answers are sent from it.</para>
				<para>This activity type is implicitly created when receiving Requests or can be created with call to the proper <methodname>createCxDxServerSessionActivity</methodname> method of <classname>net.java.slee.resource.diameter.cxdx.CxDxProvider</classname> for sending Requests. It ends once underlying Cx/Dx session ends.</para>
			</listitem>
		</varlistentry>
	</variablelist>
	
	<para>
		All activities define methods required to properly function and	expose necessary information to	<acronym>JAIN SLEE</acronym> services.
		Common part for both Client and Server Activity is defined as follows:
	</para>
	
	<programlisting role="JAVA" language="Java">
	public String getSessionId();

	public CxDxAVPFactory getCxDxAvpFactory();

	public CxDxMessageFactory getCxDxMessageFactory();
	</programlisting>

	<variablelist>
		<varlistentry>
			<term>public String getSessionId();</term>
			<listitem>
				<para>This method returns Session ID of underlying Diameter session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public CxDxAVPFactory getCxDxAvpFactory();</term>
			<listitem>
				<para>This method returns an AVP factory capable of creating Diameter Cx/Dx related AVPs. It also provides access to Base AVP Factory.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public CxDxMessageFactory getCxDxMessageFactory();</term>
			<listitem>
				<para>This method returns a message factory capable of creating Diameter Cx/Dx messages. It also provides access to Base Message Factory.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<para>Cx/Dx Client Activity is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	public UserAuthorizationRequest createUserAuthorizationRequest();

	public void sendUserAuthorizationRequest(
		UserAuthorizationRequest userAuthorizationRequest)
			throws IOException;

	public ServerAssignmentRequest createServerAssignmentRequest();

	public void sendServerAssignmentRequest(
		ServerAssignmentRequest serverAssignmentRequest)
			throws IOException;

	public LocationInfoRequest createLocationInfoRequest();

	public void sendLocationInfoRequest(LocationInfoRequest locationInfoRequest)
		throws IOException;

	public MultimediaAuthenticationRequest createMultimediaAuthenticationRequest();

	public void sendMultimediaAuthenticationRequest(
		MultimediaAuthenticationRequest multimediaAuthenticationRequest) throws IOException;

	public RegistrationTerminationAnswer createRegistrationTerminationAnswer();

	public void sendRegistrationTerminationAnswer(
		RegistrationTerminationAnswer registrationTerminationAnswer) throws IOException;

	public PushProfileAnswer createPushProfileAnswer();

	public void sendPushProfileAnswer(PushProfileAnswer pushProfileAnswer)
		throws IOException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>public UserAuthorizationRequest createUserAuthorizationRequest();</term>
			<listitem>
				<para>This method creates a User-Authorization-Request message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendUserAuthorizationRequest(UserAuthorizationRequest userAuthorizationRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event User-Authorization-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public ServerAssignmentRequest createServerAssignmentRequest();</term>
			<listitem>
				<para>This method creates a ServerAssignmentRequest message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendServerAssignmentRequest(ServerAssignmentRequest serverAssignmentRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event Server-Assignment-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public LocationInfoRequest createLocationInfoRequest();</term>
			<listitem>
				<para>This method creates a LocationInfoRequest message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendLocationInfoRequest(LocationInfoRequest locationInfoRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event Location-Info-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public MultimediaAuthenticationRequest createMultimediaAuthenticationRequest();</term>
			<listitem>
				<para>This method creates a MultimediaAuthenticationRequest message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendMultimediaAuthenticationRequest(MultimediaAuthenticationRequest multimediaAuthenticationRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event Multimedia-Authentication-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public RegistrationTerminationAnswer createRegistrationTerminationAnswer();</term>
			<listitem>
				<para>This method creates a RegistrationTerminationAnswer message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendRegistrationTerminationAnswer(RegistrationTerminationAnswer registrationTerminationAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event Registration-Termination-Answer. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendRegistrationTerminationAnswer(RegistrationTerminationAnswer registrationTerminationAnswer) throws IOException;</term>
			<listitem>
				<para>This method creates a Registration-Termination-Answer populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendPushProfileAnswer(PushProfileAnswer pushProfileAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event Push-Profile-Answer in response to a Push-Profile-Request received on this activity.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<para>Cx/Dx Server Activity is defined as follows:</para>
	
	<programlisting role="JAVA" language="Java">
	public UserAuthorizationAnswer createUserAuthorizationAnswer();

	public void sendUserAuthorizationAnswer(
		UserAuthorizationAnswer userAuthorizationAnswer)
			throws IOException;

	public ServerAssignmentAnswer createServerAssignmentAnswer();

	public void sendServerAssignmentAnswer(
		ServerAssignmentAnswer serverAssignmentAnswer)
			throws IOException;

	public LocationInfoAnswer createLocationInfoAnswer();

	public void sendLocationInfoAnswer(LocationInfoAnswer locationInfoAnswer)
		throws IOException;

	public MultimediaAuthenticationAnswer createMultimediaAuthenticationAnswer();

	public void sendMultimediaAuthenticationAnswer(
		MultimediaAuthenticationAnswer multimediaAuthenticationAnswer) throws IOException;

	public RegistrationTerminationRequest createRegistrationTerminationRequest();

	public void sendRegistrationTerminationRequest(
		RegistrationTerminationRequest registrationTerminationRequest) throws IOException;

	public PushProfileRequest createPushProfileRequest();

	public void sendPushProfileRequest(PushProfileRequest pushProfileRequest)
		throws IOException;
	</programlisting>
	
	<variablelist>
		<varlistentry>
			<term>public UserAuthorizationAnswer createUserAuthorizationAnswer();</term>
			<listitem>
				<para>This method creates a User-Authorization-Answer message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendUserAuthorizationAnswer(UserAuthorizationAnswer userAuthorizationAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event User-Authorization-Answer in response to a User-Authorization-Request received on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public ServerAssignmentAnswer createServerAssignmentAnswer();</term>
			<listitem>
				<para>This method creates a ServerAssignmentAnswer message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendServerAssignmentAnswer(ServerAssignmentAnswer serverAssignmentAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event Server-Assignment-Answer in response to a Server-Assignment-Request received on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public LocationInfoAnswer createLocationInfoAnswer();</term>
			<listitem>
				<para>This method creates a LocationInfoAnswer message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendLocationInfoAnswer(LocationInfoAnswer locationInfoAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event Location-Info-Answer in response to a Location-Info-Request received on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public MultimediaAuthenticationAnswer createMultimediaAuthenticationAnswer();</term>
			<listitem>
				<para>This method creates a MultimediaAuthenticationAnswer message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendMultimediaAuthenticationAnswer(MultimediaAuthenticationAnswer multimediaAuthenticationAnswer) throws IOException;</term>
			<listitem>
				<para>This method sends an event Multimedia-Authentication-Answer in response to a Multimedia-Authentication-Request received on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public RegistrationTerminationRequest createRegistrationTerminationRequest();</term>
			<listitem>
				<para>This method creates a RegistrationTerminationRequest message pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendRegistrationTerminationRequest(RegistrationTerminationRequest registrationTerminationRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event Registration-Termination-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public PushProfileRequest createPushProfileRequest();</term>
			<listitem>
				<para>This method creates a Push-Profile-Request pre-populated with the AVPs appropriate for this session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>public void sendPushProfileRequest(PushProfileRequest pushProfileRequest) throws IOException;</term>
			<listitem>
				<para>This method sends an event Push-Profile-Request. An event containing the answer will be fired on this activity.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<note><para>It is safe to type cast all the mentioned Diameter Activities to it's super interface <classname>net.java.slee.resource.diameter.base.DiameterActivity</classname> defined in Diameter Base Activities section.</para></note>
</section>